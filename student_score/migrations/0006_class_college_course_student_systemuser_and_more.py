# Generated by Django 4.1.3 on 2023-02-16 20:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('student_score', '0005_remove_chengji_shuxue_remove_chengji_yingyu_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(choices=[('一班', '一班'), ('二班', '二班'), ('三班', '三班'), ('四班', '四班'), ('五班', '五班')], help_text='名称', max_length=100, null=True, verbose_name='班级')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text='名称', max_length=100, null=True, verbose_name='学校名称')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(choices=[('语文', '语文'), ('数学', '数学'), ('英语', '英语')], help_text='名称', max_length=100, null=True, verbose_name='课程名称')),
                ('c_lass', models.ForeignKey(help_text='所属班级', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_class', to='student_score.class', verbose_name='所属班级')),
                ('college', models.ForeignKey(help_text='所属学校', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_college', to='student_score.college', verbose_name='所属学校')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text='名称', max_length=100, null=True, verbose_name='学生姓名')),
                ('t_class', models.ForeignKey(help_text='所属班级', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_student', to='student_score.class', verbose_name='所属班级')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('card_number', models.CharField(help_text='工号', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='姓名', max_length=100, null=True)),
                ('sex', models.CharField(help_text='性别', max_length=100, null=True)),
                ('phone', models.CharField(help_text='手机号', max_length=100, null=True)),
                ('role', models.CharField(help_text='角色, 教师, 导员，管理员， 主任', max_length=100, null=True)),
                ('audit', models.BooleanField(default=False, help_text='审核', max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUserCourseMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.course')),
                ('system_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.systemuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUserCollegeMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.college')),
                ('system_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.systemuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemUserClassMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('system_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.systemuser')),
                ('t_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.class')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCourseMemberShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('result', models.FloatField(blank=True, help_text='实际得分', null=True)),
                ('when', models.CharField(help_text='什么时候的考试， 第一学期，第二学期', max_length=100, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_score.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(choices=[('一年级', '一年级'), ('二年级', '二年级'), ('三年级', '三年级'), ('四年级', '四年级'), ('五年级', '五年级'), ('六年级', '六年级')], help_text='名称', max_length=100, null=True, verbose_name='年级')),
                ('college', models.ForeignKey(help_text='所属学校', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='student_score.college', verbose_name='所属学校')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='grade',
            field=models.ForeignKey(help_text='所属年级', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course', to='student_score.grade', verbose_name='所属年级'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(through='student_score.StudentCourseMemberShip', to='student_score.student', verbose_name='学生姓名'),
        ),
        migrations.AddField(
            model_name='course',
            name='system_users',
            field=models.ManyToManyField(help_text='教师和课程多对多关系', through='student_score.SystemUserCourseMembership', to='student_score.systemuser', verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='college',
            name='system_users',
            field=models.ManyToManyField(through='student_score.SystemUserCollegeMembership', to='student_score.systemuser'),
        ),
        migrations.AddField(
            model_name='class',
            name='college',
            field=models.ForeignKey(help_text='所属学校', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='college', to='student_score.college', verbose_name='所属学校'),
        ),
        migrations.AddField(
            model_name='class',
            name='grade',
            field=models.ForeignKey(help_text='所属年级', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='student_score.grade', verbose_name='所属年级'),
        ),
        migrations.AddField(
            model_name='class',
            name='system_users',
            field=models.ManyToManyField(help_text='导员和班级多对多关系', through='student_score.SystemUserClassMembership', to='student_score.systemuser'),
        ),
    ]
